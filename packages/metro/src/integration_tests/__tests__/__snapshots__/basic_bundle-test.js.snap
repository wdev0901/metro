// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic_bundle bundles package with polyfills 1`] = `
"var __DEV__=false,__BUNDLE_START_TIME__=this.nativePerformanceNow?nativePerformanceNow():Date.now(),process=this.process||{};process.env=process.env||{};process.env.NODE_ENV='production';
(function (global) {
  'use strict';

  global.require = _require;
  global.__d = define;
  var modules = Object.create(null);

  function define(factory, moduleId, dependencyMap) {
    if (moduleId in modules) {
      return;
    }

    modules[moduleId] = {
      dependencyMap: dependencyMap,
      exports: undefined,
      factory: factory,
      hasError: false,
      isInitialized: false
    };
  }

  function _require(moduleId) {
    var moduleIdReallyIsNumber = moduleId;
    var module = modules[moduleIdReallyIsNumber];
    return module && module.isInitialized ? module.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
  }

  var inGuard = false;

  function guardedLoadModule(moduleId, module) {
    if (!inGuard && global.ErrorUtils) {
      inGuard = true;
      var returnValue = void 0;

      try {
        returnValue = loadModuleImplementation(moduleId, module);
      } catch (e) {
        global.ErrorUtils.reportFatalError(e);
      }

      inGuard = false;
      return returnValue;
    } else {
      return loadModuleImplementation(moduleId, module);
    }
  }

  var ID_MASK_SHIFT = 16;
  var LOCAL_ID_MASK = ~0 >>> ID_MASK_SHIFT;

  function unpackModuleId(moduleId) {
    var segmentId = moduleId >>> ID_MASK_SHIFT;
    var localId = moduleId & LOCAL_ID_MASK;
    return {
      segmentId: segmentId,
      localId: localId
    };
  }

  _require.unpackModuleId = unpackModuleId;

  function packModuleId(value) {
    return value.segmentId << ID_MASK_SHIFT + value.localId;
  }

  _require.packModuleId = packModuleId;

  function loadModuleImplementation(moduleId, module) {
    var nativeRequire = global.nativeRequire;

    if (!module && nativeRequire) {
      var _unpackModuleId = unpackModuleId(moduleId),
          _segmentId = _unpackModuleId.segmentId,
          _localId = _unpackModuleId.localId;

      nativeRequire(_localId, _segmentId);
      module = modules[moduleId];
    }

    if (!module) {
      throw unknownModuleError(moduleId);
    }

    if (module.hasError) {
      throw moduleThrewError(moduleId, module.error);
    }

    module.isInitialized = true;
    var exports = module.exports = {};
    var _module = module,
        factory = _module.factory,
        dependencyMap = _module.dependencyMap;

    try {
      var _moduleObject = {
        exports: exports
      };
      factory(global, _require, _moduleObject, exports, dependencyMap);
      {
        module.factory = undefined;
        module.dependencyMap = undefined;
      }
      return module.exports = _moduleObject.exports;
    } catch (e) {
      module.hasError = true;
      module.error = e;
      module.isInitialized = false;
      module.exports = undefined;
      throw e;
    }
  }

  function unknownModuleError(id) {
    var message = 'Requiring unknown module \\"' + id + '\\".';
    return Error(message);
  }

  function moduleThrewError(id, error) {
    var displayName = id;
    return Error('Requiring module \\"' + displayName + '\\", which threw an exception: ' + error);
  }
})(this);
(function (global) {
  'use strict';

  if (!Object.keys) {
    Object.keys = function () {};
  }
})(this);
(function (global) {
  'use strict';

  if (!String.prototype.repeat) {
    String.prototype.repeat = function () {};
  }
})(this);
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var Bar = _require(_dependencyMap[0]);

  var Foo = _require(_dependencyMap[1]);

  module.exports = {
    Foo: Foo,
    Bar: Bar
  };
},4,[5,6]);
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var Foo = _require(_dependencyMap[0]);

  module.exports = {
    type: 'bar',
    foo: Foo.type
  };
},5,[6]);
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var asset = _require(_dependencyMap[0]);

  module.exports = {
    type: 'foo',
    asset: asset
  };
},6,[7]);
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    \\"__packager_asset\\": true,
    \\"httpServerLocation\\": \\"/assets\\",
    \\"width\\": 8,
    \\"height\\": 8,
    \\"scales\\": [1],
    \\"hash\\": \\"77d45c1f7fa73c0f6c444a830dc42f67\\",
    \\"name\\": \\"test\\",
    \\"type\\": \\"png\\"
  });
},7,[8]);
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';
},8,[]);
require(4);"
`;

exports[`basic_bundle bundles package without polyfills 1`] = `
"var __DEV__=false,__BUNDLE_START_TIME__=this.nativePerformanceNow?nativePerformanceNow():Date.now(),process=this.process||{};process.env=process.env||{};process.env.NODE_ENV='production';
(function (global) {
  'use strict';

  global.require = _require;
  global.__d = define;
  var modules = Object.create(null);

  function define(factory, moduleId, dependencyMap) {
    if (moduleId in modules) {
      return;
    }

    modules[moduleId] = {
      dependencyMap: dependencyMap,
      exports: undefined,
      factory: factory,
      hasError: false,
      isInitialized: false
    };
  }

  function _require(moduleId) {
    var moduleIdReallyIsNumber = moduleId;
    var module = modules[moduleIdReallyIsNumber];
    return module && module.isInitialized ? module.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
  }

  var inGuard = false;

  function guardedLoadModule(moduleId, module) {
    if (!inGuard && global.ErrorUtils) {
      inGuard = true;
      var returnValue = void 0;

      try {
        returnValue = loadModuleImplementation(moduleId, module);
      } catch (e) {
        global.ErrorUtils.reportFatalError(e);
      }

      inGuard = false;
      return returnValue;
    } else {
      return loadModuleImplementation(moduleId, module);
    }
  }

  var ID_MASK_SHIFT = 16;
  var LOCAL_ID_MASK = ~0 >>> ID_MASK_SHIFT;

  function unpackModuleId(moduleId) {
    var segmentId = moduleId >>> ID_MASK_SHIFT;
    var localId = moduleId & LOCAL_ID_MASK;
    return {
      segmentId: segmentId,
      localId: localId
    };
  }

  _require.unpackModuleId = unpackModuleId;

  function packModuleId(value) {
    return value.segmentId << ID_MASK_SHIFT + value.localId;
  }

  _require.packModuleId = packModuleId;

  function loadModuleImplementation(moduleId, module) {
    var nativeRequire = global.nativeRequire;

    if (!module && nativeRequire) {
      var _unpackModuleId = unpackModuleId(moduleId),
          _segmentId = _unpackModuleId.segmentId,
          _localId = _unpackModuleId.localId;

      nativeRequire(_localId, _segmentId);
      module = modules[moduleId];
    }

    if (!module) {
      throw unknownModuleError(moduleId);
    }

    if (module.hasError) {
      throw moduleThrewError(moduleId, module.error);
    }

    module.isInitialized = true;
    var exports = module.exports = {};
    var _module = module,
        factory = _module.factory,
        dependencyMap = _module.dependencyMap;

    try {
      var _moduleObject = {
        exports: exports
      };
      factory(global, _require, _moduleObject, exports, dependencyMap);
      {
        module.factory = undefined;
        module.dependencyMap = undefined;
      }
      return module.exports = _moduleObject.exports;
    } catch (e) {
      module.hasError = true;
      module.error = e;
      module.isInitialized = false;
      module.exports = undefined;
      throw e;
    }
  }

  function unknownModuleError(id) {
    var message = 'Requiring unknown module \\"' + id + '\\".';
    return Error(message);
  }

  function moduleThrewError(id, error) {
    var displayName = id;
    return Error('Requiring module \\"' + displayName + '\\", which threw an exception: ' + error);
  }
})(this);
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var Bar = _require(_dependencyMap[0]);

  var Foo = _require(_dependencyMap[1]);

  module.exports = {
    Foo: Foo,
    Bar: Bar
  };
},2,[3,4]);
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var Foo = _require(_dependencyMap[0]);

  module.exports = {
    type: 'bar',
    foo: Foo.type
  };
},3,[4]);
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var asset = _require(_dependencyMap[0]);

  module.exports = {
    type: 'foo',
    asset: asset
  };
},4,[5]);
__d(function (global, _require, module, exports, _dependencyMap) {
  module.exports = _require(_dependencyMap[0]).registerAsset({
    \\"__packager_asset\\": true,
    \\"httpServerLocation\\": \\"/assets\\",
    \\"width\\": 8,
    \\"height\\": 8,
    \\"scales\\": [1],
    \\"hash\\": \\"77d45c1f7fa73c0f6c444a830dc42f67\\",
    \\"name\\": \\"test\\",
    \\"type\\": \\"png\\"
  });
},5,[6]);
__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';
},6,[]);
require(2);"
`;
